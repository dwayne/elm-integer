#!/usr/bin/env bash

#
# Usage: check
#

set -euo pipefail

project="${project:?}"

fail () {
  echo "$1" >&2
  exit 1
}

# Check scripts

if ! check-scripts &>/dev/null; then
  fail "One or more scripts have issues. Run: check-scripts"
fi

# Format

if ! format --validate &>/dev/null; then
  fail "Your code needs to be formatted. Run: format"
fi

# Integer

build-integer () {
  cd "$project" && elm make "$project/src/Integer.elm" --output=/dev/null
}

if ! (build-integer &>/dev/null); then
  build-integer
fi

if ! (cd "$project" && elm-test &>/dev/null); then
  fail "One or more tests failed. Run: elm-test"
fi

# Calculator

if ! (build-examples-calculator &>/dev/null); then
  build-examples-calculator
fi

if ! (test-examples-calculator &>/dev/null); then
  fail "One or more tests failed. Run: test-examples-calculator"
fi
